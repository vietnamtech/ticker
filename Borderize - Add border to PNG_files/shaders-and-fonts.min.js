function getBasicFragmentShaderCode() {
    return "\n    precision mediump float;\n\n    varying vec2 textCoord;\n    uniform sampler2D texture;\n    uniform bool premultipleAlpha;\n\n    void main(void) \n    {\n        vec4 textureColor = texture2D(texture, textCoord.xy);\n        vec4 color = textureColor;\n        \n        if(premultipleAlpha)\n            color.rgb *= color.a;\n\n        gl_FragColor = color;\n    }"
}
function getThresholdFragmentShaderCode() {
    return "\n    precision mediump float;\n\n    varying vec2 textCoord;\n    \n    uniform sampler2D texture;\n    uniform float thresHold;\n\n    void main(void) \n    {\n        float alpha = texture2D(texture, textCoord.xy).a;\n        vec3 color = alpha < thresHold ? vec3(0.0) : vec3(1.0);\n\n        gl_FragColor = vec4(color.rgb, 1.0);\n    }"
}
function getDilatationShaderCode() {
    return "\n    precision mediump float;\n\n    varying vec2 textCoord;\n    \n    uniform sampler2D texture;\n    uniform bool horizontal;\n\n    uniform float textureWidth;\n    uniform float textureHeight;\n    uniform bool normalized;\n\n    void main(void) \n    {\n        //0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216\n\n        float weight[5];\n        weight[0] = 0.227027;\n        weight[1] = 0.1945946;\n        weight[2] = 0.1216216;\n        weight[3] = 0.054054;\n        weight[4] = 0.016216;\n        \n        float total = 0.227027 + 0.1945946 + 0.1216216 + 0.054054 + 0.016216;\n\n        /*\n        float weight[6];\n        weight[0] = 1.0;\n        weight[1] = 0.933;\n        weight[2] = 0.757;\n        weight[3] = 0.533;\n        weight[4] = 0.329;\n        weight[5] = 0.176;\n\n        float total = 1.0 + 0.933 + 0.757 + 0.533 + 0.329 + 0.176;*/\n\n        vec2 textOffset = vec2(1.0 / textureWidth, 1.0 / textureHeight);\n        float result = texture2D(texture, textCoord).r * weight[0];\n\n        if(horizontal)\n        {\n            for(int i = 1; i < 5; ++i)\n            {\n                result += texture2D(texture, textCoord + vec2(textOffset.x * float(i), 0.0)).r * weight[i]; \n                result += texture2D(texture, textCoord - vec2(textOffset.x * float(i), 0.0)).r * weight[i];\n            }    \n        }\n        else\n        {\n            for(int i = 1; i < 5; ++i)\n            {\n                result += texture2D(texture, textCoord + vec2(0.0, textOffset.y * float(i))).r * weight[i];\n                result += texture2D(texture, textCoord - vec2(0.0, textOffset.y * float(i))).r * weight[i];\n            }\n        }\n\n        vec3 dilatation = normalized ? vec3(result / total) : vec3(result);\n\n        gl_FragColor = vec4(dilatation.rgb, 1.0);\n\n        //gl_FragColor = vec4(color.rgb, color.r * result / (total * 0.75));\n    }"
}
function getColorMaskShaderCode() {
    return "\n        precision mediump float;\n\n        varying vec2 textCoord;\n        \n        uniform sampler2D texture;\n        uniform vec4 colorMask;\n\n        void main(void) \n        {\n            vec3 mask = texture2D(texture, textCoord.xy).rgb;\n            \n\n            gl_FragColor = vec4(mask.rgb * colorMask.rgb * colorMask.a, mask.r * colorMask.a);\n        }"
}
function getBasicVertexShaderCode() {
    return "\n    attribute vec3 vertex;\n    \n    varying vec2 textCoord;\n\n    void main(void) \n    {\n        textCoord = (vertex.xy + 1.0) / 2.0;\n        gl_Position = vec4(vertex, 1.0);\n    }"
}
const fonts = ["Alfa Slab One", "Anton", "Bahiana", "Bebas Neue", "Bevan", "Bowlby One SC", "Bungee", "Bungee Inline", "Bungee Outline", "Bungee Shade", "Chewy", "Codystar", "Condiment", "Courier Prime", "Covered By Your Grace", "Damion", "Fascinate", "Fredoka One", "Gaegu", "Gamja Flower", "Hi Melody", "Jua", "Kirang Haerang", "Knewave", "Lacquer", "Leckerli One", "Love Ya Like A Sister", "Luckiest Guy", "Ma Shan Zheng", "Major Mono Display", "Mansalva", "Meddon", "Modak", "Mrs Sheppards", "Pacifico", "Passion One", "Permanent Marker", "Press Start 2P", "Rubik Mono One", "Sacramento", "Sarina", "Satisfy", "Seaweed Script", "Sedgwick Ave", "Shadows Into Light", "Shrikhand", "Special Elite", "Sue Ellen Francisco", "Syncopate", "Ultra", "Vampiro One", "VT323", "Warnes", "Yellowtail", "Yesteryear", "ZCOOL KuaiLe"];
